name: Build and upload to PyPI

on:
  # Trigger the workflow on push or pull request on the main branch, or a tag
  push:
    branches:
      - main
    tags:
  pull_request:
    branches:
      - main

# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm https://stackoverflow.com/a/68959339
          submodules: true  # Optional, use if you have submodules
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pypa/build
        run: pip install build

      - name: Build sdist *and* wheel (even though we ignore it) to check we can confirm wheels from source.
        run: USE_CYTHON=1 python -m build

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
  
  build_wheels:
    needs: build_sdist
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm https://stackoverflow.com/a/68959339
          submodules: true  # Optional, use if you have submodules

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  upload_pypi_test:
    needs: build_wheels
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}